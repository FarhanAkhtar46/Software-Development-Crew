### Steps for Performing Unit Testing on School Management System

#### 1. **Functional Tests**

Functional tests ensure that each function of the software application operates in conformance with the requirement specification.

1. **User Authentication Module:**
   - Test valid login with correct username and password.
   - Test invalid login with incorrect username and password.
   - Test password reset functionality.

2. **Student Management Module:**
   - Test adding a new student record.
   - Test editing an existing student record.
   - Test deleting a student record.
   - Test retrieving a student record by ID.

3. **Teacher Management Module:**
   - Test adding a new teacher record.
   - Test editing an existing teacher record.
   - Test deleting a teacher record.
   - Test retrieving a teacher record by ID.

4. **Class Management Module:**
   - Test creating a new class.
   - Test assigning students to a class.
   - Test assigning teachers to a class.
   - Test updating class information.

5. **Attendance Module:**
   - Test marking attendance for students.
   - Test viewing attendance records.
   - Test generating attendance reports.

6. **Grade Management Module:**
   - Test entering grades for students.
   - Test updating grades.
   - Test viewing grades.
   - Test generating grade reports.

#### 2. **Edge Cases**

Edge cases are scenarios that occur at the extreme ends of input ranges.

1. **User Authentication Module:**
   - Test login with an empty username and password.
   - Test login with extremely long username and password.
   - Test the system’s response to SQL injection attempts.

2. **Student Management Module:**
   - Test adding a student with maximum allowed characters in each field.
   - Test adding a student with special characters in name fields.
   - Test the system behavior when attempting to delete a non-existent student record.

3. **Teacher Management Module:**
   - Test adding a teacher with maximum allowed characters in each field.
   - Test adding a teacher with special characters in name fields.
   - Test the system behavior when attempting to delete a non-existent teacher record.

4. **Class Management Module:**
   - Test creating a class with a maximum number of students.
   - Test creating a class with special characters in the class name.
   - Test the system behavior when attempting to update a non-existent class.

5. **Attendance Module:**
   - Test marking attendance for a class with no students.
   - Test viewing attendance records when there are none.
   - Test generating attendance reports for a future date.

6. **Grade Management Module:**
   - Test entering grades with maximum allowed characters.
   - Test entering invalid grade formats (e.g., letters instead of numbers).
   - Test generating grade reports for a non-existent student.

#### 3. **Performance Tests**

Performance tests ensure the software application performs well under expected workloads.

1. **Load Testing:**
   - Test the system's behavior under peak load conditions, such as the start of a new school term when many users log in simultaneously.
   - Test the system's performance when retrieving a large number of student records.

2. **Stress Testing:**
   - Test the system's behavior under extreme stress, such as attempting to log in with thousands of simultaneous users.
   - Test the system's response time when generating large reports (e.g., attendance and grade reports for an entire year).

3. **Scalability Testing:**
   - Test adding a large number of student and teacher records to evaluate the system’s scalability.
   - Test the system's performance when scaling up the number of classes and associated data.

By following these steps, you can ensure thorough unit testing for the school management system, covering functional tests, edge cases, and performance tests.